generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String              @id @default(uuid())
  name               String
  email              String              @unique
  passwordHash       String
  emailVerified      Boolean             @default(false)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  verificationTokens VerificationToken[]
  folders            Folder[] 
  images             Image[]  
}

model VerificationToken {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  userId    String 
  parentId  String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  parent   Folder? @relation("SubFolders", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children Folder[] @relation("SubFolders") 

  images Image[] 
}

model Image {
  id        String   @id @default(uuid())
  name      String
  url       String   
  folderId  String   
  userId    String   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  folder Folder @relation(fields: [folderId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
